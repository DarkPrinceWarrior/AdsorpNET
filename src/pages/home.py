import streamlit as st
import pandas as pd
from pathlib import Path
from PIL import Image
import plotly.graph_objects as go


###############################
# Helpers
###############################

def load_home_css() -> None:
    """Inject CSS styles for the Home page from *static/home.css*.

    If the file cannot be found we fail silently so the rest of the page
    still renders.
    """
    css_path = Path("static/style.css")
    if css_path.exists():
        with css_path.open() as f:
            css = f.read()
        st.markdown(f"<style>{css}</style>", unsafe_allow_html=True)
    else:
        st.warning("CSS‚Äë—Ñ–∞–π–ª static/home.css –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äì —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–∫–∞–∑–∞–Ω–∞ –±–µ–∑ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Å—Ç–∏–ª–µ–π.")


###############################
# Page
###############################

def show():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ AdsorpNET."""

    # 1. Load page‚Äëspecific styles -------------------------
    load_home_css()

    # 2. Header -------------------------------------------
    header_col1, header_col2 = st.columns([3, 1])

    with header_col1:
        st.markdown('<h1 class="logo-text">AdsorpNET</h1>', unsafe_allow_html=True)
        st.markdown('<p>AI‚Äë—Å–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—Ä–∏—Å—Ç—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤</p>', unsafe_allow_html=True)

    with header_col2:
        # –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏ "–ì–ª–∞–≤–Ω–∞—è" –∏ "–ü—Ä–æ—Ñ–∏–ª—å" —É–¥–∞–ª–µ–Ω—ã
        pass

    # 3. Tabs ---------------------------------------------
    tab1, tab2 = st.tabs(["üîç –û–±–∑–æ—Ä", "üß™ AI —Å–∏–Ω—Ç–µ–∑ MOFs"])

    # ------------------------------------------------------------------
    # TAB 1 ‚Äì –û–±–∑–æ—Ä / Hero‚Äë—Å–µ–∫—Ü–∏—è
    # ------------------------------------------------------------------
    with tab1:
        hero_col1, hero_col2 = st.columns([3, 2])

        # --- Hero: –æ–ø–∏—Å–∞–Ω–∏–µ & CTA ------------------------------------
        with hero_col1:
            st.markdown('<h2 class="accent-header">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ AdsorpNET!</h2>', unsafe_allow_html=True)
            st.markdown(
                """
                –ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–π AI‚Äë—Å–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—Ä–∏—Å—Ç—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º 
                –ø–µ—Ä–µ–¥–æ–≤—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å–∏–Ω—Ç–µ–∑–∞ 
                –º–µ—Ç–∞–ª–ª–æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏—Ö –∫–∞—Ä–∫–∞—Å–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä (MOFs).
                """
            )

        # --- Hero: –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ---------------------------------------
        with hero_col2:
            img_path = Path("images/MOF_Synthesis_Prediction.png")
            if img_path.exists():
                st.image(str(img_path), width=450)
            else:
                # Fallback –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è ‚Äì –ø—Ä–æ—Å—Ç–∞—è 3‚ÄëD scatter
                fig = go.Figure(
                    data=[
                        go.Scatter3d(
                            x=[0, 1, 2, 0, 1, 2, 0, 1, 2],
                            y=[0, 0, 0, 1, 1, 1, 2, 2, 2],
                            z=[0, 1, 0, 1, 0, 1, 0, 1, 0],
                            mode="markers",
                            marker=dict(
                                size=12,
                                color=[
                                    "blue",
                                    "red",
                                    "green",
                                    "blue",
                                    "red",
                                    "green",
                                    "blue",
                                    "red",
                                    "green",
                                ],
                                opacity=0.8,
                            ),
                        )
                    ]
                )
                fig.update_layout(
                    margin=dict(l=0, r=0, b=0, t=0),
                    paper_bgcolor="rgba(0,0,0,0)",
                    plot_bgcolor="rgba(0,0,0,0)",
                    scene=dict(
                        xaxis=dict(showticklabels=False, title=""),
                        yaxis=dict(showticklabels=False, title=""),
                        zaxis=dict(showticklabels=False, title=""),
                    ),
                )
                st.plotly_chart(fig, use_container_width=True)
        
        # Features section
        st.markdown('<h3 class="accent-header">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã</h3>', unsafe_allow_html=True)
        
        features_col1, features_col2 = st.columns(2)
        
        with features_col1:
            st.markdown('<h4>üî¨ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å–∏–Ω—Ç–µ–∑–∞</h4>', unsafe_allow_html=True)
            st.markdown("""
            –ù–∞—à–∞ AI-—Å–∏—Å—Ç–µ–º–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∏–Ω—Ç–µ–∑–∞ MOF –Ω–∞ –æ—Å–Ω–æ–≤–µ –∂–µ–ª–∞–µ–º—ã—Ö 
            —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∫–æ–Ω–µ—á–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞:
            - –ü–æ–¥–±–æ—Ä –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏—Ö –∫–ª–∞—Å—Ç–µ—Ä–æ–≤
            - –í—ã–±–æ—Ä –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏—Ö –ª–∏–≥–∞–Ω–¥–æ–≤
            - –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å—Ç–≤–æ—Ä–∏—Ç–µ–ª—è
            - –†–∞—Å—á–µ—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ —Å–∏–Ω—Ç–µ–∑–∞
            """)
            
            st.markdown('<h4>üß™ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —É—Å–ª–æ–≤–∏–π —Å–∏–Ω—Ç–µ–∑–∞</h4>', unsafe_allow_html=True)
            st.markdown("""
            –°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ñ–∞–∫—Ç–æ—Ä–æ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —É—Å–ª–æ–≤–∏–π —Å–∏–Ω—Ç–µ–∑–∞:
            - –ê–Ω–∞–ª–∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            - –û—Ü–µ–Ω–∫–∞ –≤–ª–∏—è–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
            - –†–∞—Å—á–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã—Ö —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
            - –ú–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∫—Ä–∏—Å—Ç–∞–ª–ª–∏–∑–∞—Ü–∏–∏
            """)
            
        with features_col2:
            st.markdown('<h4>üìä –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫</h4>', unsafe_allow_html=True)
            st.markdown("""
            –ü—Ä–æ–≤–æ–¥–∏–º –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö MOF –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤:
            - –†–∞—Å—á–µ—Ç —É–¥–µ–ª—å–Ω–æ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏
            - –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–±—ä–µ–º–∞ –∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ—Ä
            - –û—Ü–µ–Ω–∫–∞ —Ç–µ—Ä–º–∏—á–µ—Å–∫–æ–π —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
            - –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ä–±—Ü–∏–æ–Ω–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤
            """)
            
            st.markdown('<h4>üìà –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤</h4>', unsafe_allow_html=True)
            st.markdown("""
            –ò—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥—ã –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è, —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç:
            - –°–æ—Ä–±—Ü–∏–æ–Ω–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
            - –°–µ–ª–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∫ —Ä–∞–∑–ª–∏—á–Ω—ã–º –≥–∞–∑–∞–º
            - –ö–∞—Ç–∞–ª–∏—Ç–∏—á–µ—Å–∫—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
            - –•–∏–º–∏—á–µ—Å–∫—É—é –∏ –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫—É—é —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å
            """)
    
    # AI Synthesis Tab (placeholder)
    with tab2:
        st.markdown('<h2 class="accent-header">AI —Å–∏–Ω—Ç–µ–∑ Metal-Organic Frameworks</h2>', unsafe_allow_html=True)
        
        st.markdown("""
        –ó–∞–¥–∞–π—Ç–µ –∂–µ–ª–∞–µ–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –≤–∞—à–µ–≥–æ MOF –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –∏ –Ω–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è —Å–∏–Ω—Ç–µ–∑–∞.
        """)
        
        # Input form for MOF parameters
        form_col1, form_col2 = st.columns(2)
        
        with form_col1:
            st.markdown("### –¶–µ–ª–µ–≤—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏")
            surface_area = st.slider("–£–¥–µ–ª—å–Ω–∞—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å (–º¬≤/–≥)", 500, 2000, 1000)
            pore_size = st.slider("–†–∞–∑–º–µ—Ä –ø–æ—Ä (√Ö)", 5, 50, 20)
            thermal_stability = st.slider("–¢–µ—Ä–º–∏—á–µ—Å–∫–∞—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å (¬∞C)", 200, 600, 400)
            
            st.markdown("### –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º")
            metal_options = ["Zn", "Cu", "Al", "Fe", "Zr", "Ti", "Cr", "Ni", "Co", "Mg"]
            metals = st.multiselect("–ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–∞–ª–ª—ã", metal_options)
            
            ligand_types = ["–î–∏–∫–∞—Ä–±–æ–∫—Å–∏–ª–∞—Ç–Ω—ã–µ", "–¢—Ä–∏–∫–∞—Ä–±–æ–∫—Å–∏–ª–∞—Ç–Ω—ã–µ", "–ê–∑–æ—Ç—Å–æ–¥–µ—Ä–∂–∞—â–∏–µ", "–°—É–ª—å—Ñ–æ—Å–æ–¥–µ—Ä–∂–∞—â–∏–µ"]
            ligands = st.multiselect("–¢–∏–ø—ã –ª–∏–≥–∞–Ω–¥–æ–≤", ligand_types)
        
        with form_col2:
            st.markdown("### –£—Å–ª–æ–≤–∏—è —Å–∏–Ω—Ç–µ–∑–∞")
            method = st.selectbox("–ú–µ—Ç–æ–¥ —Å–∏–Ω—Ç–µ–∑–∞", ["–°–æ–ª—å–≤–æ—Ç–µ—Ä–º–∞–ª—å–Ω—ã–π", "–ú–µ—Ö–∞–Ω–æ—Ö–∏–º–∏—á–µ—Å–∫–∏–π", "–ú–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤—ã–π", "–£–ª—å—Ç—Ä–∞–∑–≤—É–∫–æ–≤–æ–π"])
            
            st.markdown("### –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
            applications = st.multiselect("–¶–µ–ª–µ–≤–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ", 
                ["–•—Ä–∞–Ω–µ–Ω–∏–µ H‚ÇÇ", "–ó–∞—Ö–≤–∞—Ç CO‚ÇÇ", "–†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –≥–∞–∑–æ–≤", "–ö–∞—Ç–∞–ª–∏–∑", "–î–æ—Å—Ç–∞–≤–∫–∞ –ª–µ–∫–∞—Ä—Å—Ç–≤", "–°–µ–Ω—Å–æ—Ä—ã"])
            
            st.markdown("### –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è")
            constraints = st.multiselect("–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è", 
                ["–≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "–ù–∏–∑–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å", "–ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å", "–í–æ–¥–æ—Å—Ç–æ–π–∫–æ—Å—Ç—å"])
        
        # Submit button
        if st.button("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∏–Ω—Ç–µ–∑–∞"):
            st.markdown('<div class="card" style="margin-top: 20px;">', unsafe_allow_html=True)
            st.markdown('<h3 class="accent-header">–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∏–Ω—Ç–µ–∑–∞</h3>', unsafe_allow_html=True)
            
            # Display recommendations (placeholder)
            rec_col1, rec_col2 = st.columns(2)
            
            with rec_col1:
                st.markdown("### –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã")
                st.markdown("**–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –º–µ—Ç–∞–ª–ª—ã:** Zn¬≤‚Å∫, Cu¬≤‚Å∫")
                st.markdown("**–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –ª–∏–≥–∞–Ω–¥:** 1,4-–±–µ–Ω–∑–æ–ª–¥–∏–∫–∞—Ä–±–æ–Ω–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞ (BDC)")
                st.markdown("**–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Ä–∞—Å—Ç–≤–æ—Ä–∏—Ç–µ–ª—å:** N,N-–¥–∏–º–µ—Ç–∏–ª—Ñ–æ—Ä–º–∞–º–∏–¥ (DMF)")
                
                st.markdown("### –û–∂–∏–¥–∞–µ–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞")
                st.markdown(f"**–£–¥–µ–ª—å–Ω–∞—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å:** {surface_area + 200} –º¬≤/–≥")
                st.markdown(f"**–†–∞–∑–º–µ—Ä –ø–æ—Ä:** {pore_size + 2} √Ö")
                st.markdown(f"**–¢–µ—Ä–º–∏—á–µ—Å–∫–∞—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å:** {thermal_stability + 30} ¬∞C")
                
            with rec_col2:
                st.markdown("### –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∏–Ω—Ç–µ–∑–∞")
                st.markdown("**–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:** 120 ¬∞C")
                st.markdown("**–í—Ä–µ–º—è —Å–∏–Ω—Ç–µ–∑–∞:** 24 —á")
                st.markdown("**pH —Å—Ä–µ–¥—ã:** 6.5-7.0")
                st.markdown("**–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –º–µ—Ç–∞–ª–ª:–ª–∏–≥–∞–Ω–¥:** 1:1.5")
                
                # Visualization of confidence
                confidence_data = {
                    "–ü–∞—Ä–∞–º–µ—Ç—Ä": ["–ú–µ—Ç–∞–ª–ª", "–õ–∏–≥–∞–Ω–¥", "–†–∞—Å—Ç–≤–æ—Ä–∏—Ç–µ–ª—å", "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", "–í—Ä–µ–º—è"],
                    "–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å (%)": [92, 88, 95, 85, 80]
                }
                confidence_df = pd.DataFrame(confidence_data)
                
                fig = go.Figure(go.Bar(
                    x=confidence_df["–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å (%)"],
                    y=confidence_df["–ü–∞—Ä–∞–º–µ—Ç—Ä"],
                    orientation='h',
                    marker_color='#4e54c8',
                    text=confidence_df["–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å (%)"].astype(str) + '%',
                    textposition='auto'
                ))
                
                fig.update_layout(
                    title="–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å AI –≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö",
                    xaxis_title="–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å (%)",
                    yaxis_title="",
                    margin=dict(l=0, r=10, t=30, b=0),
                    height=250,
                    xaxis=dict(range=[0, 100])
                )
                
                st.plotly_chart(fig, use_container_width=True)
            
            st.markdown("### –ü—Ä–æ—Ç–æ–∫–æ–ª —Å–∏–Ω—Ç–µ–∑–∞")
            st.markdown("""
            1. –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å —Ä–∞—Å—Ç–≤–æ—Ä Zn(NO‚ÇÉ)‚ÇÇ¬∑6H‚ÇÇO (0.297 –≥, 1 –º–º–æ–ª—å) –≤ 15 –º–ª DMF.
            2. –î–æ–±–∞–≤–∏—Ç—å 1,4-–±–µ–Ω–∑–æ–ª–¥–∏–∫–∞—Ä–±–æ–Ω–æ–≤—É—é –∫–∏—Å–ª–æ—Ç—É (0.249 –≥, 1.5 –º–º–æ–ª—å) –∏ –ø–µ—Ä–µ–º–µ—à–∞—Ç—å –¥–æ –ø–æ–ª–Ω–æ–≥–æ —Ä–∞—Å—Ç–≤–æ—Ä–µ–Ω–∏—è.
            3. –ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ —Ä–∞—Å—Ç–≤–æ—Ä –≤ —Ç–µ—Ñ–ª–æ–Ω–æ–≤—ã–π –∞–≤—Ç–æ–∫–ª–∞–≤ –æ–±—ä–µ–º–æ–º 50 –º–ª.
            4. –ù–∞–≥—Ä–µ—Ç—å –∞–≤—Ç–æ–∫–ª–∞–≤ –¥–æ 120 ¬∞C –∏ –≤—ã–¥–µ—Ä–∂–∞—Ç—å –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.
            5. –û—Ö–ª–∞–¥–∏—Ç—å –¥–æ –∫–æ–º–Ω–∞—Ç–Ω–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –≤ —Ç–µ—á–µ–Ω–∏–µ 12 —á–∞—Å–æ–≤.
            6. –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã, –ø—Ä–æ–º—ã—Ç—å DMF (3 √ó 10 –º–ª) –∏ –º–µ—Ç–∞–Ω–æ–ª–æ–º (3 √ó 10 –º–ª).
            7. –°—É—à–∏—Ç—å –ø—Ä–∏ 80 ¬∞C –≤ –≤–∞–∫—É—É–º–µ –≤ —Ç–µ—á–µ–Ω–∏–µ 12 —á–∞—Å–æ–≤.
            """)
            
            st.markdown('</div>', unsafe_allow_html=True)
    
    # Sidebar sections removed - statistics, recent projects, and help are no longer displayed
