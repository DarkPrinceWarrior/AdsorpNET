"""
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è AdsorpNET.
"""

import streamlit as st
from streamlit_option_menu import option_menu
import logging
from pathlib import Path

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –±–∞–∑–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é - –î–û–õ–ñ–ù–û –ë–´–¢–¨ –ü–ï–†–í–û–ô –ö–û–ú–ê–ù–î–û–ô STREAMLIT!
st.set_page_config(
    page_title="AdsorpNET - AI —Å–µ—Ä–≤–∏—Å –ø–æ—Ä–∏—Å—Ç—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤",
    page_icon="üßä",
    layout="wide",
    initial_sidebar_state="expanded",
)

def add_custom_styles():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π –ø–∞–Ω–µ–ª–∏ —Å —Ü–≤–µ—Ç–∞–º–∏ –ø—Ä–æ–µ–∫—Ç–∞."""
    
    st.markdown('<link rel="stylesheet" href="static/accessibility.css">', unsafe_allow_html=True)
    st.markdown("""
    <style>
    /* –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ü–≤–µ—Ç–∞ —Ç–µ–º—ã - –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø—Ä–æ–µ–∫—Ç–æ–º */
    :root {
        --primary-color: #FF4B4B; /* –ö—Ä–∞—Å–Ω—ã–π –∞–∫—Ü–µ–Ω—Ç */
        --secondary-color: #0B2545; /* –¢–µ–º–Ω–æ-—Å–∏–Ω–∏–π —Ñ–æ–Ω */
        --accent-color: #134074; /* –°—Ä–µ–¥–Ω–∏–π —Å–∏–Ω–∏–π */
        --highlight-color: #8DA9C4; /* –°–≤–µ—Ç–ª–æ-—Å–∏–Ω–∏–π */
        --text-color: #FFFFFF; /* –ë–µ–ª—ã–π —Ç–µ–∫—Å—Ç */
    }
    
    /* –£—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–Ω—ã–π —Å—Ç–∏–ª—å –¥–ª—è —Å–∞–π–¥–±–∞—Ä–∞ */
    section.st-emotion-cache-vk3wp9.e1fqkh3o11, 
    section[data-testid="stSidebar"],
    div.st-emotion-cache-6qob1r.e1fqkh3o3 {
        background: linear-gradient(150deg, #0b2545 0%, #173b73 90%);
        width: auto !important;
        min-width: 250px !important;
        max-width: 320px !important;
        box-shadow: 2px 0 16px rgba(0,0,0,0.3) !important;
        border-right: 1px solid rgba(255,255,255,0.1);
    }
    
    /* –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–∞ */
    .st-emotion-cache-1kyxreq.e1tzin5v3 img {
        margin: 0 auto;
        display: block;
        max-width: 90%;
        height: auto;
        transition: transform 0.3s ease;
    }
    
    .st-emotion-cache-1kyxreq.e1tzin5v3 img:hover {
        transform: scale(1.02);
    }
    
    /* –£–ª—É—á—à–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ */
    .nav-link {
        white-space: nowrap !important;
        overflow: hidden !important;
        text-overflow: ellipsis !important;
        font-size: 16px !important;
        margin: 4px 0 !important;
        border-radius: 6px !important;
        transition: all 0.3s ease !important;
    }
    
    .nav-link:hover {
        background-color: rgba(255,255,255,0.1) !important;
        color: #ffffff !important;
        transform: translateX(3px);
        letter-spacing: 0.3px;
    }
    
    /* –ê–Ω–∏–º–∞—Ü–∏–∏ –∏ —ç—Ñ—Ñ–µ–∫—Ç—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ */
    .nav-link-selected {
        transition: all 0.3s ease !important;
        box-shadow: 0 2px 8px rgba(0,0,0,0.2) !important;
    }
    
    /* –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–∞–π–¥–±–∞—Ä–∞ */
    @media (min-width: 1200px) {
        section[data-testid="stSidebar"] {
            min-width: 280px !important;
            max-width: 320px !important;
        }
    }
    
    @media (max-width: 1199px) and (min-width: 992px) {
        section[data-testid="stSidebar"] {
            min-width: 260px !important;
            max-width: 300px !important;
        }
    }
    
    @media (max-width: 991px) and (min-width: 768px) {
        section[data-testid="stSidebar"] {
            min-width: 240px !important;
            max-width: 280px !important;
        }
    }
    
    @media (max-width: 767px) {
        section[data-testid="stSidebar"] {
            min-width: 220px !important;
            max-width: 260px !important;
        }
    }
    
    /* –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã –∏ —Ä–∞–º–∫–∏ */
    .css-1544g2n.e1fqkh3o4 {
        padding: 0 !important;
    }
    
    /* –£–ª—É—á—à–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è —Å–∫—Ä–æ–ª–ª-–±–∞—Ä–∞ */
    ::-webkit-scrollbar {
        width: 5px;
        height: 5px;
    }
    
    ::-webkit-scrollbar-track {
        background: rgba(0,0,0,0.1);
        border-radius: 10px;
    }
    
    ::-webkit-scrollbar-thumb {
        background: linear-gradient(45deg, #FF4B4B, #ff6b6b);
        border-radius: 10px;
        border: 1px solid rgba(255,255,255,0.1);
    }
    
    ::-webkit-scrollbar-thumb:hover {
        background: #ff3b3b;
    }
    
    /* –§–∏–∫—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ */
    .stApp {
        overflow-x: hidden;
    }
    
    /* –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ —Å–∫—Ä–æ–ª–ª–∞ */
    .st-emotion-cache-18ni7ap.ezrtsby2 {
        overflow-x: auto !important;
    }
    
    /* –£–±–∏—Ä–∞–µ–º –æ—Ç—Å—Ç—É–ø—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞—Ö */
    div.st-emotion-cache-16txtl3.eczjsme4 {
        padding: 0 !important;
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –≤—Å–µ—Ö —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤ –º–µ–Ω—é */
    div[data-testid="stVerticalBlock"] div[data-baseweb="select"] div,
    div[data-testid="stVerticalBlock"] div[role="listbox"],
    div[data-testid="stVerticalBlock"] div[data-baseweb="select"] ul {
        white-space: nowrap !important;
        overflow: hidden !important;
        text-overflow: ellipsis !important;
    }
    
    /* –£–ª—É—á—à–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è streamlit-option-menu */
    #MainMenu, #main-menu, #main_menu {
        white-space: nowrap !important;
        overflow: hidden !important;
        font-family: 'SF Pro Display', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important;
    }
    
    /* –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –æ—Ç—Å—Ç—É–ø–æ–≤ –≤ –º–µ–Ω—é */
    .css-17ziqus, .css-pkbazv, .st-emotion-cache-17ziqus, .st-emotion-cache-pkbazv {
        padding-left: 15px !important;
        padding-right: 15px !important;
    }
    
    /* –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —à–∏—Ä–∏–Ω—ã –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–µ–Ω—é */
    .css-17ziqus, .st-emotion-cache-17ziqus {
        width: 100% !important;
        max-width: 300px !important;
    }
    
    /* –£–º–µ–Ω—å—à–∞–µ–º —Ä–∞–∑–º–µ—Ä –∑–Ω–∞—á–∫–æ–≤ –≤ –º–µ–Ω—é –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é */
    .nav-link svg {
        width: 18px !important;
        height: 18px !important;
        margin-right: 10px !important;
        transition: transform 0.3s ease !important;
    }
    
    .nav-link:hover svg {
        transform: translateX(2px) !important;
    }
    
    /* –î–µ–ª–∞–µ–º —Ç–µ–∫—Å—Ç –º–µ–Ω—é –±–æ–ª–µ–µ –∑–∞–º–µ—Ç–Ω—ã–º */
    .nav-link span {
        font-weight: 500 !important;
        letter-spacing: 0.5px !important;
    }
    </style>
    """, unsafe_allow_html=True)

# –ò–º–ø–æ—Ä—Ç—ã –∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
from src.pages import home, analysis, predict, team, info
from src.utils.ui import load_user_preferences
from src.utils.storage import clear_prediction_cache
from src.services.model_service import ModelService
from src.config.app_config import LOGGING_CONFIG
from src.config.model_config import MODEL_CONFIG

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
import logging.config
logging.config.dictConfig(LOGGING_CONFIG)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∏–ª–∏
def load_styles():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç CSS —Å—Ç–∏–ª–∏ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    css_path = Path("static/style.css")
    if css_path.exists():
        with open(css_path, encoding='utf-8') as css_file:
            st.markdown(f'<style>{css_file.read()}</style>', unsafe_allow_html=True)
    else:
        logger.error(f"–§–∞–π–ª —Å—Ç–∏–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω: {css_path}")

def initialize_services():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–µ—Ä–≤–∏—Å—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å –º–æ–¥–µ–ª–µ–π (–ª–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞)
    if 'model_service' not in st.session_state:
        logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ –º–æ–¥–µ–ª–µ–π")
        st.session_state.model_service = ModelService()
        
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π
    if 'cache_cleared' not in st.session_state:
        st.session_state.cache_cleared = False
    
    # –û—á–∏—â–∞–µ–º –∫—ç—à –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑)
    if not st.session_state.cache_cleared:
        clear_prediction_cache()
        st.session_state.cache_cleared = True
        logger.info("–ö—ç—à –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –æ—á–∏—â–µ–Ω –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏")

def create_sidebar():
    """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—É—é –ø–∞–Ω–µ–ª—å —Å —Ü–≤–µ—Ç–∞–º–∏ –ø—Ä–æ–µ–∫—Ç–∞."""
    
    # –°–æ–∑–¥–∞–µ–º –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–∞–π–¥–±–∞—Ä–∞
    with st.sidebar:
        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ª–æ–≥–æ—Ç–∏–ø–∞ —Å –æ—Ç—Å—Ç—É–ø–∞–º–∏ –∏ —É–ª—É—á—à–µ–Ω–Ω—ã–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
        with st.container():
            st.image("images/logo.png", use_container_width=True)
        
        # –≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–π —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –ø–æ—Å–ª–µ –ª–æ–≥–æ—Ç–∏–ø–∞
        st.markdown("""
        <div style="height:2px; background: linear-gradient(90deg, rgba(255,255,255,0), rgba(255,75,75,0.5), rgba(255,255,255,0)); 
        margin: 15px 0 20px 0; border-radius: 2px;"></div>
        """, unsafe_allow_html=True)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ –º–µ–Ω—é —Å –ø–æ–º–æ—â—å—é streamlit-option-menu
        # —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏ –∏ –∞–Ω–∏–º–∞—Ü–∏–µ–π
        selected = option_menu(
            menu_title=None,
            options=[
                "–ì–ª–∞–≤–Ω–∞—è", 
                "–û MOF", 
                "AI —Å–∏–Ω—Ç–µ–∑", 
                "–ê–Ω–∞–ª–∏–∑", 
                "–û –ø—Ä–æ–µ–∫—Ç–µ"
            ],
            icons=[
                "house-fill", 
                "info-circle-fill", 
                "cpu-fill", 
                "graph-up", 
                "people-fill"
            ],
            default_index=0,
            key="main_menu",
            styles={
                "container": {
                    "padding": "0px", 
                    "background-color": "#0B2545",
                    "max-width": "100%",
                    "border-radius": "8px",
                    "overflow": "hidden",
                    "box-shadow": "0 4px 6px rgba(0,0,0,0.1)"
                },
                "icon": {
                    "color": "#FF4B4B",
                    "font-size": "16px",
                    "transition": "all 0.3s ease"
                },
                "nav-link": {
                    "font-size": "16px", 
                    "text-align": "left", 
                    "margin": "0px", 
                    "padding": "12px 15px",
                    "border-radius": "0px",
                    "--hover-color": "#13315C",
                    "white-space": "nowrap",
                    "overflow": "hidden",
                    "text-overflow": "ellipsis",
                    "display": "flex",
                    "align-items": "center",
                    "color": "#FFFFFF",
                    "font-weight": "500",
                    "transition": "all 0.3s ease"
                },
                "nav-link-selected": {
                    "background-color": "#13315C",
                    "font-weight": "bold",
                    "color": "#FF4B4B",
                    "border-left": "3px solid #FF4B4B",
                    "transform": "translateX(2px)"
                }
            }
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–≥–∞–Ω—Ç–Ω—ã–π —Ñ—É—Ç–µ—Ä –≤ –Ω–∏–∂–Ω–µ–π —á–∞—Å—Ç–∏ —Å–∞–π–¥–±–∞—Ä–∞
        st.markdown("""
        <div style="position: fixed; bottom: 0; left: 0; width: 100%; background: linear-gradient(0deg, #0B2545 0%, transparent 100%); 
        padding: 15px 15px 10px 15px; text-align: center; font-size: 12px; color: rgba(255,255,255,0.7);">
            AdsorpNET ¬© 2025<br>
            –ò–§–•–≠ –†–ê–ù
        </div>
        """, unsafe_allow_html=True)
        
        return selected

def run():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ AdsorpNET."""
    try:
        # –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        logger.info("–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è AdsorpNET")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        load_user_preferences()
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∏–ª–∏
        load_styles()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π –ø–∞–Ω–µ–ª–∏
        add_custom_styles()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã
        initialize_services()
        
        # –°–æ–∑–¥–∞–µ–º –±–æ–∫–æ–≤–æ–µ –º–µ–Ω—é –∏ –ø–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—É–Ω–∫—Ç
        selected = create_sidebar()
        
        # –í—ã–±–æ—Ä –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        if selected == "–ì–ª–∞–≤–Ω–∞—è":
            home.show()
        elif selected == "AI —Å–∏–Ω—Ç–µ–∑": # –°–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
            predict.show()
        elif selected == "–û MOF": # –°–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
            info.show()
        elif selected == "–ê–Ω–∞–ª–∏–∑":
            analysis.show()
        elif selected == "–û –ø—Ä–æ–µ–∫—Ç–µ":
            team.show()
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {str(e)}", exc_info=True)
        st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {str(e)}")

if __name__ == "__main__":
    run()